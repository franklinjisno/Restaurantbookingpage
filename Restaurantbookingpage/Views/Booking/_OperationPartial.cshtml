@model Restaurantbookingpage.Booking
    @using BookingClass.Enum;
@{ 

}

<form name="bookingForm">
    <div class="modal-header">
        <h4 class="modal-title">
            <span><b>Booking</b></span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        </h4>
    </div>
    @Html.AntiForgeryToken()
    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(c => c.Id)
        <div class="row">
            <div class="col-md-auto">
                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Customer Name</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        @Html.EditorFor(model => model.Customer_Name, new { htmlAttributes = new { @Id = "Customer_Name", @class = "form-control", @minlength = 4, @maxlength = 30 } })
                        @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Date Time</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        @Html.EditorFor(model => model.Datetime, new { htmlAttributes = new { @type = "date", @id = "Datetime", @Value = Model.Datetime.ToString("yyyy/MM/dd"), @min = "2022-02-01", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Datetime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Dinning Type</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        <select class="form-control" name="Dinning_Type" id="Dinning_Type">
                            @if (TempData["Dinning Type"] != null)
                            {
                                <option value=@TempData["Dinning Type"]>@TempData["Dinning Type"]</option>
                            }
                            <option value="Indoor">Indoor</option>
                            <option value="Outdoor">Outdoor</option>
                            <option value="Terrace">Terrace</option>
                        </select>
                    </div>
                </div>

                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Number of Guests</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        @Html.EditorFor(model => model.NumberofGuest, new { htmlAttributes = new { @Id = "NumberofGuest", @class = "form-control", @min = 0, @max = 100 } })
                        @Html.ValidationMessageFor(model => model.NumberofGuest, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Contact</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @Id = "Contact", @class = "form-control", @minlength = 10, @maxlength = 10 } })
                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="padding-left: 20px">
                    <h5><b>Category</b></h5>
                    <div class="col-md-auto" style="padding-left: 2px; padding-right: 30px">
                        <select class="form-control" name="Category" id="Category">
                            @if (TempData["Category"] != null)
                            {
                                <option value=@TempData["Category"]>@TempData["Category"]</option>
                            }
                            <option value="Vegetarian">Vegetarian</option>
                            <option value="Non-Vegetarian">Non-Vegetarian</option>
                            <option value="Vegan">Vegan</option>
                        </select>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-sm pull-right" data-dismiss="modal">Cancel</button>
        <button type="button" id="saveclick" onclick="Savebooking()" class="btn btn-sm btn-success pull-right">Save</button>
        <button type="button" id="editclick" onclick="enableedit()" class="btn btn-sm btn-success pull-right">Edit</button>
    </div>
</form>

<script type="text/javascript">
    $(document).ready(function () {
        var operation = '@Model.Actions.ToString()';
        if (operation == '@Actions.View') {
            $('.form-control').attr('disabled', true);
        }
        if (operation == '@Actions.Create') {
            $('.form-control').attr('disabled', false);
        }
         if (operation == '@Actions.Edit') {
            $('.form-control').attr('disabled', false);
        }
    });

    function enableedit() {
        $('.form-control').attr('disabled', false);
        document.getElementById("saveclick").disabled = false;
        document.getElementById("editclick").disabled = true;
    }

</script>

